version: 2

jobs:
  build:
    docker:
      - image: shopware/development:latest
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: symfony
          MYSQL_USER: app
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD: app
    working_directory: ~/shopware # directory where steps will run
    steps: # a set of executable commands
      - checkout # special step to check out source code to working directory
      - run: composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer install --no-interaction --optimize-autoloader --no-suggest
      - run: composer install -d vendor/shopware/recovery --no-interaction --optimize-autoloader --no-suggest
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache: # special step to restore the dependency cache if `package.json` does not change
          keys:
            - node-v1-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - node-v1-
      - run: cp .env .env.local
      - run: ./bin/ci bundle:dump
      - run: apt update && apt install shellcheck
      - run: shellcheck --exclude=SC1090 --exclude=SC2039 bin/*.sh .gitlab-ci/*.sh .gitlab-ci/tools/bin/*.sh .gitlab-ci/e2e/*.sh
      - run: composer install -d .gitlab-ci/tools
      - run: php .gitlab-ci/tools/vendor/bin/ecs check --config easy-coding-standard.php
      - run: php .gitlab-ci/tools/vendor/bin/phpstan analyse
      - run: php .gitlab-ci/tools/vendor/bin/psalm
      - run: curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o php-cs-fixer
      - run: chmod a+x php-cs-fixer
      - run: ./php-cs-fixer --diff --dry-run -v --allow-risky=yes fix
      - run: php -d memory_limit=-1 vendor/bin/phpstan analyse src --level max
      - run: php -d memory_limit=-1 vendor/bin/simple-phpunit

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build